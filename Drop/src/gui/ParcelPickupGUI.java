/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import controller.ParcelPickupController;
import domain.Delivery;
import domain.Token;
import domain.TokenAssistant;
import java.awt.TextField;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.UUID;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Afonso
 */
public class ParcelPickupGUI extends javax.swing.JFrame {

    private JFrame parentFrame;
    private ParcelPickupController controller;

    //private DefaultComboBoxModel modelTokenCB;
    public ParcelPickupGUI(JFrame parentFrame) {
        super("Group Epsilon - Recolha de Encomendas n√£o Levantadas");
        this.parentFrame = parentFrame;
        controller = new ParcelPickupController();
        initComponents();
        tokenTXT.setEditable(false);
        generateToken();
        /*modelTokenCB = new DefaultComboBoxModel();
        tokenCB.setModel(modelTokenCB);
        addElementsTokenCB();*/
        setLocationRelativeTo(null);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sairBTN = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tokenTXT = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        sairBTN.setText("Sair");

        jLabel1.setText("Token:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(sairBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tokenTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tokenTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addComponent(sairBTN)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generateToken() {      
        String code = UUID.randomUUID().toString().substring(0, 8);
        DateFormat df = new SimpleDateFormat("yy.mm.dd");
        Date today = Calendar.getInstance().getTime();
        String data = df.format(today);
        Token newToken = new TokenAssistant(controller.getTokenDAO().getNextId(), data, data, 1, code, 0);
        controller.getTokenDAO().insertNew(newToken);
        for (Token t : controller.checkValidity()) {
            Delivery delivery = controller.getDeliveryDAO().getDeliveryByReservationId(t.getReservationId());
            delivery.setAssistantTokenID(newToken.getId());
            controller.getDeliveryDAO().update(delivery);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton sairBTN;
    private javax.swing.JTextField tokenTXT;
    // End of variables declaration//GEN-END:variables
}
