/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import controller.ConsultOccupationDeliveriesController;
import controller.ListMaintenanceController;
import controller.ListRepairController;
import domain.DropPoint;
import java.util.List;
import javax.swing.*;
import ui.Main;

/**
 *
 * @author vascopinho
 */
public class ManagerListsGUI extends javax.swing.JFrame {

    private controller.ConsultOccupationDeliveriesController odpController;
    private controller.ListMaintenanceController maintenanceController;
    private controller.ListRepairController repairController;
    private DefaultComboBoxModel<DropPoint> dropPointModel;

    /**
     * Creates new form ManagerListsGUI
     */
    public ManagerListsGUI() {
        initComponents();
        setVisible(true);
        maintenanceController = new ListMaintenanceController(Main.CREDENTIALS_FILE);
        dropPointModel = new DefaultComboBoxModel<>();
        setModel(maintenanceController.listDropPoints());
        dropPointCB.setModel(dropPointModel);
        
    }

    public void setModel(List<DropPoint> lDropPoints) {
        for (DropPoint dp : lDropPoints) {
            dropPointModel.addElement(dp);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectDropPoint = new javax.swing.JLabel();
        dropPointCB = new javax.swing.JComboBox();
        listDeliveries = new javax.swing.JButton();
        listPickup = new javax.swing.JButton();
        occupation = new javax.swing.JButton();
        maintenance = new javax.swing.JButton();
        repairs = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        selectDropPoint.setText("Selecione DropPoint:");

        dropPointCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropPointCBActionPerformed(evt);
            }
        });

        listDeliveries.setText("Listar Entregas");
        listDeliveries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listDeliveriesActionPerformed(evt);
            }
        });

        listPickup.setText("Listar Recolhas");
        listPickup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listPickupActionPerformed(evt);
            }
        });

        occupation.setText("Ocupação");
        occupation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                occupationActionPerformed(evt);
            }
        });

        maintenance.setText("Listar Manutenção");
        maintenance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maintenanceActionPerformed(evt);
            }
        });

        repairs.setText("Listar Reparação");
        repairs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repairsActionPerformed(evt);
            }
        });

        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jScrollPane1.setViewportView(jTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maintenance, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(repairs, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(listDeliveries, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(listPickup, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(occupation, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(selectDropPoint)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(dropPointCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(selectDropPoint)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dropPointCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(listDeliveries)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(listPickup)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(occupation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(maintenance)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(repairs)
                        .addGap(0, 76, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dropPointCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropPointCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dropPointCBActionPerformed

    private void listDeliveriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listDeliveriesActionPerformed
        odpController = new ConsultOccupationDeliveriesController(Main.CREDENTIALS_FILE);
        jTextArea.setText("Deliveries:\n"+odpController.getListRegisterDelivered((DropPoint)dropPointCB.getSelectedItem()));
    }//GEN-LAST:event_listDeliveriesActionPerformed

    private void listPickupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listPickupActionPerformed
        odpController = new ConsultOccupationDeliveriesController(Main.CREDENTIALS_FILE);
        jTextArea.setText("PickUps:\n"+odpController.getListRegistrationCollected((DropPoint)dropPointCB.getSelectedItem()));
    }//GEN-LAST:event_listPickupActionPerformed

    private void occupationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_occupationActionPerformed
        odpController = new ConsultOccupationDeliveriesController(Main.CREDENTIALS_FILE);
        jTextArea.setText(odpController.getOccupation((DropPoint)dropPointCB.getSelectedItem()));
    }//GEN-LAST:event_occupationActionPerformed

    private void maintenanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maintenanceActionPerformed
        jTextArea.setText("Maintenance:\n"+maintenanceController.getMaintenanceList((DropPoint)dropPointCB.getSelectedItem()));
    }//GEN-LAST:event_maintenanceActionPerformed

    private void repairsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repairsActionPerformed
        repairController = new ListRepairController(Main.CREDENTIALS_FILE);
        jTextArea.setText("Repair:\n"+repairController.getRepairCompleted((DropPoint)dropPointCB.getSelectedItem()));
    }//GEN-LAST:event_repairsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagerListsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagerListsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagerListsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagerListsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagerListsGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox dropPointCB;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea;
    private javax.swing.JButton listDeliveries;
    private javax.swing.JButton listPickup;
    private javax.swing.JButton maintenance;
    private javax.swing.JButton occupation;
    private javax.swing.JButton repairs;
    private javax.swing.JLabel selectDropPoint;
    // End of variables declaration//GEN-END:variables
}
